#include "stdafx.h"
#include <iostream>
#include <conio.h>
#include <queue>
#include <fstream>

using namespace std;

bool GM;
const int w = 20, h = 20; //размеры поля
int field[h][w];
//ifstream in;
//ofstream out;
/*
0 - поле
1 - змея
2 - фрукт
3 - граница
*/
int xh, yh, xf, yf, xt, yt;
enum eD { STOP = 0, LEFT, RIGHT, UP, DOWN };
eD dir,dirp;
//char ch;

struct point
{
	int x;
	int y;
};

queue <point> snake;
point head;

bool empty(int x, int y)
{
	if (field[y][x])
		return false;
	else
		return true;
}

void fspawn()
{
	int a, b;
	while (true)
	{
		a = rand() % w;
		b = rand() % h;
		if (empty(a, b))
		{
			xf = a;
			yf = b;
			field[yf][xf] = 2;
			break;
		}
	}
}

eD invers(eD d) {
	switch(d){
		case LEFT:
			return RIGHT;
		case RIGHT:
			return LEFT;
		case UP:
			return DOWN;
		case DOWN:
			return UP;
	}
}

void Setup() {
	GM = false;
	dir = UP;
	xh = w / 2 - 1;
	yh = h / 2 - 1;
	head.x = xh;
	head.y = yh;
	snake.push(head);
	fspawn();
	for (int i = 0; i < h; i++)
		for (int j = 0; j < w; j++)
		{
			if ((i == 0) || (j == 0) || (i == w - 1) || (j == h - 1)) field[i][j] = 3;
			else if ((i == xh) && (j == yh)) field[i][j] = 1;
			else if ((i == xf) && (j == yf)) field[i][j] = 2;
			else field[i][j] = 0;
		}
}

void Draw()
{
	system("cls");
	for (int i = 0; i < h; i++)
	{
		for (int j = 0; j < w; j++)
		{
			switch (field[i][j])
			{
			case 0:
				cout << " ";
				break;
			case 3:
				cout << '#';
				break;
			case 1:
				cout << 0;
				break;
			case 2:
				cout << 'F';
				break;
			}
		}
		cout << endl;
	}
}

void Input() {
	if (_kbhit()) {
		ch = _getch();
		switch (ch) {
		case 'a':
			dirp = LEFT;
			break;
		case 'w':
			dirp = UP;
			break;
		case 'd':
			dirp = RIGHT;
			break;
		case 's':
			dirp = DOWN;
			break;
		}
		if (dirp != invers(dir)) dir = dirp;
	}
}

void Logic()
{
		switch (dir)
		{
		case LEFT:
			xh--;
			break;
		case RIGHT:
			xh++;
			break;
		case UP:
			yh--;
			break;
		case DOWN:
			yh++;
			break;
		}
	head.x = xh;
	head.y = yh;
	if (empty(xh, yh))
	{
		field[yh][xh] = 1;
		snake.push(head);
		field[snake.front().y][snake.front().x] = 0;
		snake.pop();
	}
	else if (field[yh][xh] == 2)
	{
		field[yh][xh] = 1;
		snake.push(head);
		fspawn();
	}
	else
	{
		while (!snake.empty())
			snake.pop();
		GM = true;
	}
}

int main()
{
	//in.open("log.log");
	while (true)
	{
		Setup();
		while (!GM)
		{
			Draw();
			Input();
			Logic();
		}
		system("pause");
	}
	return 0;
}
